server {

    listen 9090;

    location /t {
        access_by_lua_block {

            local ratelimit = require "resty.redis.ratelimiter.background"
            local red = { host = "127.0.0.1", port = 6379, timeout = 100}
            local lim, err = ratelimit.new("one", "2r/m", red)
            if not lim then
                ngx.log(ngx.ERR,
                        "failed to instantiate a resty.redis.ratelimiter.background object: ", err)
                return ngx.exit(500)
            end

            local key = ngx.var.remote_addr
            local is_rate_limited = lim:is_rate_limited(key, ngx.req.start_time())

            if is_rate_limited then
                return ngx.exit(429)
            end

        }

        content_by_lua_block {
             ngx.say('Hello,world!')
        }
    }

    location /login {

        access_by_lua_block {
            if login:is_rate_limited(ngx.var.remote_addr, ngx.req.start_time()) then
                return ngx.exit(429)
            end
        }

        content_by_lua_block {
             ngx.say('Hello,world!')
        }
    }

}
